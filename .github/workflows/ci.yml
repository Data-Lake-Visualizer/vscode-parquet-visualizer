name: CI
on:
  push:
    # this workflow is triggered on every:
    branches:
      - "**"    # push to a branch
    tags:
      - "v*"    # and on pushes that create tags matching the patterin `v*` (e.g., `v.1.0`).

jobs:
  build: # job 1 - build
    strategy:
      matrix: 
        include: 
        # strategy.matrix.include: Specifies different environments for the build. 
        # Each environment is a combination of OS, platform, and architecture.
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }} # This specifies the OS to run the job on, which is dynamically set by the matrix.
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2
      # Setup Node.js environment 
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      # Install dependencies
      - run: npm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_config_arch }} # environment variable is set based on the matrix configuration.
      # Set target environment variable which constructs a target string combining platform and architecture and appends it to the GitHub environment variables.
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      # npx (Node Package eXecute) allows for package running, without installing the package.
      - run: npx vsce package --target ${{ env.target }}
      # Upload the packaged artifact
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.target }}
          path: "*.vsix"

  publish: # job 2 - publish
    runs-on: ubuntu-latest
    needs: build
    # This job runs only if the build job is successful and the push is to a tag
    if: success() && startsWith( github.ref, 'refs/tags/')
    steps:
      # Download artifacts produced by the build job using actions/download-artifact@v2.
      - uses: actions/download-artifact@v2
      #  finds the .vsix package and publishes it
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          # The VSCE_PAT (Visual Studio Code Extensions Personal Access Token) is used for authentication.
          VSCE_PAT: ${{ secrets.VSCE_PAT }}