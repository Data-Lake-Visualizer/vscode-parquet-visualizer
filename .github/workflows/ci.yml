# .github/workflows/ci.yaml
name: ci

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.15.0

      - name: Install dependencies (without binaries)
        run: npm ci

      - name: Run prettier
        run: |-
          npx prettier . --check --config .prettierrc

  build:
    needs: lint
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: win32-x64
            npm_config_arch: x64
          - os: ubuntu-latest
            target: linux-x64
            npm_config_arch: x64
          - os: ubuntu-latest
            target: linux-arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            target: linux-armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            target: alpine-x64
            npm_config_arch: x64
          - os: macos-latest
            target: darwin-x64
            npm_config_arch: x64
          - os: macos-latest
            target: darwin-arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            target: universal
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20.15.0

      - if: matrix.target != 'universal'
        name: Install dependencies (with binaries)
        run: npm ci
        env:
          npm_config_arch: ${{ matrix.npm_config_arch }}

      - if: matrix.target == 'universal'
        name: Install dependencies (without binaries)
        run: npm ci

      - run: npx semantic-release --extends ./package.release.config.js
        env:
          VSCE_TARGET: ${{ matrix.target }}
          # All tokens are required since semantic-release needs to validate them
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: '*.vsix'

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' ||
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    steps:
      - run: echo "Doing release-only work (tag or release)."
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20.15.0

      - run: npm ci

      - uses: actions/download-artifact@v4

      - run: npx semantic-release --extends ./publish.release.config.js
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # In case you want to publish to Visual Studio Marketplace
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
          # In case you want to publish to Open VSX Registry
          OVSX_PAT: ${{ secrets.OVSX_PAT }}